/**
 * ‚ú® pages ÎÇ¥ index.js ÏûêÎèô ÏÉùÏÑ±Ìï¥Ï£ºÎäî Í∏∞Îä•ÏûÖÎãàÎã§.
 *
 * üü© ÏÇ¨Ïö©Î∞©Î≤ï
 *
 *      CMDÏóêÏÑú pagesIndex.js Í∞Ä ÏúÑÏπòÌïú Í≤ΩÎ°úÎ°ú Ïù¥Îèô
 *
 *      node pagesIndex.js
 *
 *      Î™ÖÎ†πÏñ¥Î•º Ïã§ÌñâÌïòÎ©¥ index.js ÌååÏùºÏù¥ ÏÉùÏÑ±ÎêòÍ±∞ÎÇò ÎÇ¥Ïö©Ïù¥ Í∞±Ïã†Îê©ÎãàÎã§.
 *
 * üü• Ï£ºÏùòÏÇ¨Ìï≠
 *
 *      *.jsx ÌååÏùºÏùÑ Ïã§Ï†ú ÌéòÏù¥ÏßÄÎ°ú Ïù∏ÏãùÌïòÎèÑÎ°ù Íµ¨ÌòÑ ÎêòÏóàÍ∏∞Ïóê
 *      RouterÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Component ÌéòÏù¥ÏßÄÎ•º Ï†úÏô∏Ìïú Îã§Î•∏ ÌéòÏù¥ÏßÄÏùò ÌôïÏû•ÏûêÎäî
 *      Î™®Îëê *.js Î°ú ÏûëÏÑ±Ìï¥ÏïºÌï©ÎãàÎã§.
 */

const fs = require("fs");
const path = require("path");

function generateExports(dirPath) {
  const files = fs.readdirSync(dirPath);
  const exportStatements = [];

  for (const file of files) {
    const fullPath = path.join(dirPath, file);
    const isDirectory = fs.statSync(fullPath).isDirectory();

    if (isDirectory) {
      const subDirExportStatements = generateExports(fullPath);
      if (subDirExportStatements.length > 0) {
        const subDirIndexPath = path.join(fullPath, "index.js");
        const subDirIndexContent = subDirExportStatements.join("\n");
        fs.writeFileSync(subDirIndexPath, subDirIndexContent);

        exportStatements.push(`export * from './${file}';`);
      }
    } else if (file.endsWith(".jsx")) {
      const fileName = path.basename(file, ".jsx");
      exportStatements.push(`export * from './${fileName}.jsx';`);
    }
  }

  return exportStatements;
}

function generateMainIndexFile(pagesPath) {
  const exportStatements = generateExports(pagesPath);
  const indexFilePath = path.join(pagesPath, "index.js");
  const indexFileContent = exportStatements.join("\n");
  fs.writeFileSync(indexFilePath, indexFileContent);
  console.log("index.js file generated successfully.");
}

const pagesPath = "./pages"; // pages Ìè¥Îçî Í≤ΩÎ°ú
generateMainIndexFile(pagesPath);

// const fs = require("fs");
// const path = require("path");

// function indexExport(dirPath) {
//   const files = fs.readdirSync(dirPath);
//   const exportStatements = [];
//   let hasSubdirectories = false; // ÌïòÏúÑ ÎîîÎ†âÌÜ†Î¶¨Ïùò Ï°¥Ïû¨ Ïó¨Î∂ÄÎ•º Ï∂îÏ†ÅÌïòÍ∏∞ ÏúÑÌïú Î≥ÄÏàò
//   const tempData = [];
//   for (const file of files) {
//     const fullPath = path.join(dirPath, file);
//     const isDirectory = fs.statSync(fullPath).isDirectory();

//     if (isDirectory) {
//       const subDirExportStatements = indexExport(fullPath);

//       if (subDirExportStatements.length > 0) {
//         hasSubdirectories = true;
//         const subDirIndexPath = path.join(dirPath, "index.js");
//         const subDirIndexContent = subDirExportStatements.join("\n");
//         tempData.push(subDirIndexContent);
//         exportStatements.push(`export * from './${file}';`);
//         if (hasSubdirectories) {
//           if (subDirIndexPath.includes("mes\\index")) {
//             fs.writeFileSync(subDirIndexPath, exportStatements.join("\n"));
//           } else {
//             fs.writeFileSync(subDirIndexPath, tempData.join("\n"));
//           }
//         }
//       }
//     } else if (file.endsWith(".jsx")) {
//       const fileName = path.basename(file, ".jsx");
//       const fileDirName = path.basename(dirPath); // ÌååÏùºÏù¥ ÏúÑÏπòÌïú ÎîîÎ†âÌÜ†Î¶¨ Ïù¥Î¶Ñ
//       exportStatements.push(`export * from './${fileDirName}/${fileName}.jsx';`);
//     }
//   }

//   return exportStatements;
// }

// function mainIndexFile(pagesPath) {
//   const exportStatements = indexExport(pagesPath);
//   const indexFilePath = path.join(pagesPath, "index.js");
//   const indexFileContent = exportStatements.join("\n");
//   fs.writeFileSync(indexFilePath, indexFileContent);
//   console.log("index.js file generated successfully.");
// }

// const pagesPath = "./pages"; // pages Ìè¥Îçî Í≤ΩÎ°ú
// mainIndexFile(pagesPath);
